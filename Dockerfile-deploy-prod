FROM node:lts-alpine AS build-frontend

# install simple http server for serving static content
RUN npm install -g http-server

# make the 'app' folder the current working directory
WORKDIR /src
RUN apk add rsync openssh-client
COPY LightsailDefaultKey-us-east-2.pem .
RUN chmod 600 LightsailDefaultKey-us-east-2.pem

WORKDIR /src/wwwroot
# copy both 'package.json' and 'package-lock.json' (if available)
COPY src/ .

# install project dependencies
#RUN npm install

# copy project files and folders to the current working directory (i.e. 'app' folder)
#COPY ./frontend .
# build app for production with minification
#RUN npm run build

WORKDIR /src
RUN ssh  -i LightsailDefaultKey-us-east-2.pem  -o stricthostkeychecking=no ec2-user@citylightcs.com "sudo mkdir -p /var/www/citylightcs-prod && sudo chown -R ec2-user:ec2-user /var/www/citylightcs-prod" \
	&& ssh  -i LightsailDefaultKey-us-east-2.pem  -o stricthostkeychecking=no ec2-user@citylightcs.com "sudo systemctl stop nginx"
RUN rsync --delete -azvPe "ssh -i LightsailDefaultKey-us-east-2.pem  -o stricthostkeychecking=no" /src/wwwroot/ ec2-user@citylightcs.com:/var/www/citylightcs-prod/

COPY ["citylightcs-prod.nginx.conf", "."]
RUN rsync   --delete -azvPe "ssh -i LightsailDefaultKey-us-east-2.pem  -o stricthostkeychecking=no" citylightcs-prod.nginx.conf ec2-user@citylightcs.com:~
RUN ssh   -i LightsailDefaultKey-us-east-2.pem  -o stricthostkeychecking=no ec2-user@citylightcs.com 'sudo cp -f ~/citylightcs-prod.nginx.conf /etc/nginx/conf.d/ && sudo systemctl start nginx'

RUN ssh -i LightsailDefaultKey-us-east-2.pem  -o stricthostkeychecking=no ec2-user@citylightcs.com 'sudo nginx -s reload'

EXPOSE 8080
CMD [ "http-server", "/src" ]
